######################################
### Kubernetes file for deployment ###
######################################


## Load balancer
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  type: LoadBalancer
  selector:
    app: bookfront
    tier: frontend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
    nodePort: 30001
    

## Deployment of frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bookfront
      tier: frontend
  template:
    metadata:
      labels:
        app: bookfront
        tier: frontend
    spec:
      containers:
        - name: bookfront # Hostname
          image: markick/bookfront
          ports:
            - containerPort: 80

## backend service that links frontend and backend. Default: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: bookback
spec:
  selector:
    app: bookback
    tier: backend
  ports:
  - protocol: TCP
    port: 3001
---

### Deployment of backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  selector:
    matchLabels:
      app: bookback
      tier: backend
  replicas: 3
  template:
    metadata:
      labels:
        app: bookback
        tier: backend
    spec:
      containers:
        - name: bookback # Hostname
          image: markick/bookback
          ports:
          - containerPort: 3001

### Deployment of service required to access database
---
apiVersion: v1
kind: Service
metadata:
  name: booklibrary-service
  labels:
    app: booklibrary
spec:
  clusterIP: 10.96.0.101
  selector:
    app: booklibrary
  ports:
  - protocol: TCP
    port: 27017
    targetPort: mongodb-port
  
---

## Deployment of database: booklibrary
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: booklibrary
  labels:
    app: booklibrary
spec:
  serviceName: booklibrary-service
  replicas: 1
  selector:
    matchLabels:
      app: booklibrary
  template:
    metadata:
      labels:
        app: booklibrary
        startup: booklibrary-wait
    spec:
      containers:
      - name: booklibrary
        image: mongo
        ports:
        - containerPort: 27017
          name: mongodb-port
        volumeMounts:
        - name: booklibrary-data
          mountPath: /data/db
        - name: mongo-config
          mountPath: /data/configdb
  volumeClaimTemplates:
  - metadata:
      name: booklibrary-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 15Mi
  - metadata:
      name: mongo-config
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests: 
          storage: 5Mi  
  
